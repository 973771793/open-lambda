cluster_util.py - wrapper around admin tool
    run: "python3 cluster_util.py --start" with optional flags:
        -cluster <dir> (defaults to working_dir/test)
        --handler-cache
        --import-cache
        --install-cache (looks in testing/benchmarks/install-cache)

    run: "python3 cluster_util.py --stop-all" to kill everything between runs

    requires:
        things in install cache dir
        things in registry dir (testing/benchmarks/registry)

run_workload - spins up clients and runs!
    run "python3 run_workload.py <config>"
    one argument -> config file (see others for examples)

    requires: handlers.txt (list of handler names, one per line)

misc:
    -> need to change the "HOST_NAME" variable in lambda/server.py and cache-entry/server.py to the IP address of the node running the pypi server (domain name isn't working for unknown reason - run 'ifconfig' to find IP address)

    -> make sure there is a *correct* (including indirect dependencies) "packages.txt" in every handler directory
